<?php

/**
* Легковесный интерфейс драйвера БД
*
* Данный интерфейс определяет минимальный набор методов для работы с базами
* данных. В силу этого минимализма здесь только низкоуровневые функции
* для выполнения запросов и получения результатов.
*
* @package database
*/
interface IDBLight
{
	/**
	* Экранировать строку
	* @param string строка для экранирования
	* @return string экранированная строка
	*/
	public function escape($text);
	
	/**
	* Экранировать строку и заключить в кавычки
	* @param string строка для экранирования
	* @return string экранированная строка заключенная в кавычки
	*/
	public function quote($text);
	
	/**
	* Выполнить один произвольный SQL-запрос
	* @param string текст SQL-запроса
	* @return mixed набор данных (ресурс или объект, в зависимости от драйвера)
	*/
	public function query($sql);
	
	/**
	* Выполнить SELECT-запрос
	* @param mixed имя таблицы (строка) или список таблиц (массив)
	* @param string список полей которые нужно извлечь
	* @param string предикат для отбора строк
	* @param string порядок сортировки строк
	* @param int максимальное число возвращаемых строк
	* @param int число строк которые нужно пропустить
	* @return mixed набор данных (ресурс или объект, в зависимости от драйвера)
	* @note поведение при $limit <= 0 && $offset > 0 || $offset < 0 не
	* регламентируется и может приводить к непредсказуемым последвиям.
	*/
	public function select($tables, $fields, $where, $order = "", $limit = 0, $offset = 0);
	
	/**
	* Извлечь очередную строку в виде ассоциативного массива
	* @param mixed набор данных
	* @return array строка данных в виде ассоциативного массива
	*/
	public function fetch_assoc($dataset);
	
	/**
	* Извлечь очередную строку в виде списка
	* @param mixed набор данных
	* @return array строка данных в виде списка значений
	*/
	public function fetch_row($dataset);
	
	/**
	* Освободить данные связанные с набором данных
	* @param mixed набор данных
	*/
	public function free_result($dataset);
	
	/**
	* Вставить строку в таблицу
	* @param string имя таблицы для вставки
	* @param array список полей в виде ассоциативного массива
	* @return int ID вставленной строки или false, если не поддерживается
	* @note значения $fields нужно экранировать вручную
	*/
	public function insert($table, $fields);
	
	/**
	* Обновить строки таблицы
	* @param string имя обновляемой таблицы
	* @param array список полей в виде ассоциативного массива
	* @param string предикат указывающий какие строки нужно обновить
	* @note значения $fields нужно экранировать вручную
	*/
	public function update($table, $fields, $where);
	
	/**
	* Удалить строки таблицы
	* @param string имя таблицы из которой удаляются строки
	* @param string предикат указывающий какие строки нужно удалить
	*/
	public function delete($table, $where);
}

?>